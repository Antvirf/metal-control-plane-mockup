// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: query.sql

package sql

import (
	"context"

	data "github.com/Antvirf/metal-control-plane/internal/data"
)

const createHardwareInfo = `-- name: CreateHardwareInfo :one
INSERT INTO hardwareinfo (mac, info)
VALUES ($1, $2)
ON CONFLICT(mac)
DO UPDATE SET info = EXCLUDED.info
RETURNING mac, info
`

type CreateHardwareInfoParams struct {
	Mac  string            `json:"mac"`
	Info data.HardwareInfo `json:"info"`
}

func (q *Queries) CreateHardwareInfo(ctx context.Context, arg CreateHardwareInfoParams) (Hardwareinfo, error) {
	row := q.db.QueryRow(ctx, createHardwareInfo, arg.Mac, arg.Info)
	var i Hardwareinfo
	err := row.Scan(&i.Mac, &i.Info)
	return i, err
}

const getHardwareInfo = `-- name: GetHardwareInfo :one
SELECT mac, info from hardwareinfo
WHERE mac = $1 LIMIT 1
`

func (q *Queries) GetHardwareInfo(ctx context.Context, mac string) (Hardwareinfo, error) {
	row := q.db.QueryRow(ctx, getHardwareInfo, mac)
	var i Hardwareinfo
	err := row.Scan(&i.Mac, &i.Info)
	return i, err
}
